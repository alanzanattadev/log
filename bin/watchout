#!/usr/bin/ruby

require 'yaml'
require 'colorize'

$defaultFile = ".log.yml"
$defaultLocation = File.expand_path("~")
$defaultPath = $defaultLocation + "/" + $defaultFile

if ARGV[0] == nil
  if File.exist?($defaultPath)
    puts "reading config file at " + $defaultPath + " ..."
    $config = YAML.load_file($defaultPath)
  else
    puts "Usage : log [filename]"
    exit(1)
  end
else
  $config = YAML.load_file(ARGV[0])
end

$offset = 300
if ARGV[1] != nil
  $offset = ARGV[1].to_i
end

class LogFile
  def initialize(name, color, io, fd)
    @color = color
    @name = name
    @io = io
    @fd = fd
  end

  def read(size)
    return @io.read_nonblock size
  end

  def color()
    @color
  end

  def fd()
    @fd
  end

  def io()
    @io
  end

  def name()
    @name
  end
end

logFileArray = []
fdArray = []
ioArray = []

$config["files"].each do |file|
  fd = IO.sysopen file["name"], "r"
  fdArray.push fd
  io = IO.new fd
  begin
    io.seek -$offset, IO::SEEK_END
  rescue

  end
  ioArray.push io
  logFileArray.push(LogFile.new(file["name"], file["color"], io, fd))
end

while true do
  select(ioArray)
  ioArray.each do |io|
    str = io.gets
    if str != "" && str != nil
      logFileArray.each do |logFile|
        if logFile.io == io
          puts (logFile.name + ": " + str).send(logFile.color)
        end
      end
    end
  end
  sleep 0.010
end
